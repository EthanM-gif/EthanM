name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: 🛎️ Checkout du dépôt
        uses: actions/checkout@v3

      - name: ⚙️ Configuration de Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: 📦 Installation des dépendances
        run: npm install

      - name: 🧪 Exécution des tests
        run: npm test

  build-and-push-docker:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: 🛎️ Checkout du dépôt
        uses: actions/checkout@v3

      - name: 🔑 Connexion à Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: 🏗️ Construction de l’image Docker
        run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/mon-app:latest .

      - name: 📤 Push de l’image sur Docker Hub
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/mon-app:latest

  deploy-to-kubernetes:
    needs: build-and-push-docker
    runs-on: ubuntu-latest
    steps:
      - name: 🛎️ Checkout du dépôt
        uses: actions/checkout@v3

      - name: 🔧 Installer kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: 🚀 Déploiement sur Kubernetes
        run: |
          echo "${{ secrets.KUBECONFIG }}" | base64 --decode > kubeconfig.yaml
          export KUBECONFIG=$(pwd)/kubeconfig.yaml
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
